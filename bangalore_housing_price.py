# -*- coding: utf-8 -*-
"""Bangalore_housing_price.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fsER2_jyXFuq8cv9u596cjpMZ3LB2cET

Description:

What are the things that a potential home buyer considers before purchasing a house? The location, the size of the property, vicinity to offices, schools, parks, restaurants,
hospitals or the stereotypical white picket fence? What about the most important factor — the price?

Now with the lingering impact of demonetization, the enforcement of the Real Estate (Regulation and Development) Act (RERA),
and the lack of trust in property developers in the city, housing units sold across India in 2017 dropped by 7 percent. In fact,
the property prices in Bengaluru fell by almost 5 percent in the second half of 2017, said a study published by property consultancy 
Knight Frank. For example, for a potential homeowner, over 9,000 apartment projects and flats for sale are available in the range of ₹42-52 lakh, followed by over 
7,100 apartments that are in the ₹52-62 lakh budget segment, says a report by property website Makaan. According to the study, there are over 5,000 projects in 
the ₹15-25 lakh budget segment followed by those in the ₹34-43 lakh budget category.

Buying a home, especially in a city like Bengaluru, is a tricky choice. While the major factors are usually the same for all metros, there are others to be considered 
for the Silicon Valley of India. With its help millennial crowd, vibrant culture, great climate and a slew of job opportunities, it is difficult to ascertain the price 
of a house in Bengaluru.

Problem Statement

To determine the approximate price for the houses in Bangalore by analysisng the given data

Data Description

Columns:


availability
location
size
society
total_sqft
bath
balcony
price

1.   area_type
2.   availability
3.   location
4.   size
5.   society
6.   total_sqft
7.   bath
8.   balcony
9.   price

Business objectives and constraints:


The cost of a mis-classification can be high.
There is strict latency concerns.
From this project we will able to understand how house prices depend on other factors.
"""

#Import all the required libraries

import pandas as pd
import numpy as np

import matplotlib.pyplot as plt
#sklearn has efficient tools for machine learning and statistical modelling which includes classification, regression, clustering and dimensionality reduction
#sklearn used to build machine learning models 
#model selction is method for setting blueprint to analyze data and using it to measure new data 
from sklearn.model_selection import train_test_split
#To implement linear regression to the model with coeifficients which could minimize the sum of squraes between the observed targets and predicted targets by linear approximation 
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import ShuffleSplit
from sklearn.model_selection import cross_val_score
#decision trees are non-parametric supervised learning method used for classification and regression, the model tht predicts the value of target variable by 
#learning simple decision rules 
from sklearn.tree import DecisionTreeRegressor
from sklearn.model_selection import GridSearchCV
from sklearn.linear_model import Lasso

file = pd.read_csv('/content/Bengaluru_House_Data.csv')

file.head()

file.shape

#Explorartory Data Analysis:  exploratory data analysis is an approach of analyzing data sets to 
#summarize their main characteristics, often using statistical graphics and other data visualization methods.
#to retrieve all the column(attributes) of the file
file.columns
#to retrieve the information about the data frame that is present in the csv file
file.info()
#used for calculating statistical data such as mean, percentile and std of numerical values of series or data frame
#Analyzes both numeric and object series and also the DataFrame column sets of mixed data types.
file.describe()
#detects the missing values in the data frame 
file.isnull()
#gives the total number of missing values 
file.isnull().sum()
#helps in group a perticulat attribute together 
file.groupby('area_type')['area_type'].agg('count') 
#gives the info about the data frame 
file.info()
#displays the first 5 rows of the data set
file.head()

#Dropping less important features
df = file.drop(["area_type", "society","balcony", "availability"], axis = "columns")

#displays all the data present afetr the drop 
df

#display the attribute names only after the drop
df.columns

#drop null values if any 
df = df.dropna()

#find the total null values that are present 
df.isnull().sum()

"""From the above we can clearly see that Bedroom is represented with 2 different methods. One is BHK and the other one is Bedroom. So we are making a new column called BHK and we are discarding all the units (like BHK, Bedroom).


"""

#Feature Engineering:Feature engineering is the process of using domain knowledge to extract features from raw data. 
#These features can be used to improve the performance of machine learning algorithms.
#unique used to find the unique elements of an array. Returns the sorted unique elements of an array. 
#displays all the values tht is present without repeatation 
df['size'].unique()

#merge the size column which has 2 values into 1 column which tells the BHK
#lambda provides a shortcut for declaring small anonymous functions.  used whenever function objects are required
df['BHK'] = df["size"].apply(lambda x: int(x.split(" ")[0]))
df.head()

#displays the values in the attribute total_sqft
df.total_sqft.unique()

#exploring total_sqft feature
#x is the size attribute
def is_float(x):
    try:
        float(x)
    except:
        return False
    return True

df[~df['total_sqft'].apply(is_float)].head(20)

df.head(35)

"""From the above we can see that total_sqft can be a range (say, 3090-5002). For such cases we can just take average of the minimum and maximum value in the range. There are other cases such as 34.46Sq. Meter which one can convert to square ft using unit conversion. So, we are going to just drop such corner cases to keep things simple.

"""

def convert_sqft_to_number(x):
#returns a list of strings after dividing the string based on the given separator. Following are the advantages of using a split function in python: 
#At some point we may have to break down a large string into smaller chunks or strings. It is the opposite of concatenation, which adds two strings together.
#here, x is the size attribute 
    tokens = x.split("-")
#length of tokens is retrieved 
    if len(tokens) == 2:
        return (float(tokens[0])+float(tokens[1]))/2
    try:
        return float(x)
    except:
        return None

#cpoies the data set which is cleaned 
df = df.copy()
#total sqft is converted to number from float 
df["total_sqft"] = df["total_sqft"].apply(convert_sqft_to_number)
#displays the first 10 items
df.head(10)

"""Here, we are adding a new feature called Price per Square Feet

"""

#copy the dataset 
df = df.copy()
df['price_per_sqft'] = df['price']*100000/df['total_sqft']
df.head()